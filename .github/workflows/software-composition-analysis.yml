on:
  workflow_call:
    inputs:
      asset-name:
        description: 'Name of the asset to be scanned'
        type: string
        required: true
      api-url:
        type: string
        required: false
        default: "https://api.devguard.org"
      path:
        description: 'Path to the source code to be scanned'
        type: string
        required: false
        default: "/github/workspace"
      fail-on-risk:
        description: 'Fail the job if a risk is higher than the configured threshold, e.g. critical, high, medium, low'
        type: string
        required: false
      fail-on-cvss:
        description: 'Fail the job if a CVSS score is higher than the configured threshold, e.g. critical, high, medium, low'
        type: string
        required: false
      web-ui:
        type: string
        required: false
        default: "https://app.devguard.org"
        description: "The URL of the DevGuard Web UI. This is used to link the results in the DevGuard Web UI."
      artifact-name:
        type: string
        required: false
        default: "source-code"
        description: "The name of the artifact you are building. This is useful when a single pipeline builds more than a single artifact like a container with a shell inside and one without. If you build a single artifact - leave it empty."
    secrets:
      devguard-token:
        description: 'DevGuard API token'
        required: true
jobs:
  sca:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      with:
        submodules: recursive
        fetch-depth: 0
        persist-credentials: true # we need the credentials to be able to use the devguard-scanner in private repositories
      uses: actions/checkout@v4 # Check out the repository content to the runner
    - name: DevGuard SCA
      uses: docker://ghcr.io/l3montree-dev/devguard/scanner:main-latest
      with:
        args: devguard-scanner sca --assetName=${{ inputs.asset-name }}  --apiUrl=${{
          inputs.api-url }} --token="${{ secrets.devguard-token }}" --path=${{
          inputs.path }} --defaultRef=${{ github.event.repository.default_branch }} --isTag=${{ github.ref_type == 'tag' }} --ref=${{ github.ref_name }} --failOnRisk=${{ inputs.fail-on-risk }} --failOnCVSS=${{ inputs.fail-on-cvss }} --artifactName=${{ inputs.artifact-name }} --webUI=${{ inputs.web-ui }}