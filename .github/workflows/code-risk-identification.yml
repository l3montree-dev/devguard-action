on:
   workflow_call:
    inputs:
      asset-name:
        description: 'Name of the asset to be scanned'
        type: string
        required: true
      api-url:
        type: string
        required: false
        default: "https://api.devguard.org"
      sarif-artifact-name:
        description: 'Name of the SARIF artifact to be downloaded'
        type: string
        required: false
        default: ""
      sarif-file:
        description: 'Path to the SARIF file to be scanned'
        type: string
        required: true
        default: "sarif.json"  
      web-ui:
        type: string
        required: false
        default: "https://app.devguard.org"
        description: "The URL of the DevGuard Web UI. This is used to link the results in the DevGuard Web UI."
    secrets:
      devguard-token:
        description: 'DevGuard API token'
        required: true  
jobs:
  code-risk-identification:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      with:
        submodules: recursive
        fetch-depth: 0
        persist-credentials: true # we need the credentials to be able to use the devguard-scanner in private repositories
      uses: actions/checkout@v4 # Check out the repository content to the runner

    - name: Download SARIF artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.sarif-artifact-name }}
      if: ${{ inputs.sarif-artifact-name != '' }}  

    - name: DevGuard Code Risk Identification
      uses: docker://ghcr.io/l3montree-dev/devguard/scanner:0.15.1
      with:
        args: devguard-scanner sarif ${{ inputs.sarif-file }} --assetName=${{ inputs.asset-name }}  --apiUrl=${{ inputs.api-url }} --token="${{ secrets.devguard-token }}" --defaultRef=${{ github.event.repository.default_branch }} --isTag=${{ github.ref_type == 'tag' }} --ref=${{ github.ref_name }} --webUI=${{ inputs.web-ui }}