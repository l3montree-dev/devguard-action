name: Full DevGuard Scan
on:
  workflow_call:
    inputs:   
      asset-name:
        description: 'Name of the asset to be scanned'
        type: string
        required: true

      api-url:
        type: string
        required: false
        default: "https://api.main.devguard.org"  

      sca-path:
        description: 'Path to the source code to be scanned'
        type: string
        required: false
        default: "/github/workspace"

      image-path:
        description: 'Path to the oci image to be scanned'
        type: string
        required: false
        default: "/github/workspace/image.tar"   
      image-tag:
        description: 'oci image tag'
        type: string
        required: false

      image-name:
        description: 'oci image name'
        type: string
        required: false
        default: 'ghcr.io/${{ github.repository }}'  
      context:
        description: 'Path to the oci context'
        type: string
        required: false
        default: "/github/workspace"
      dockerfile:
        description: 'Path to the Dockerfile'
        type: string
        required: false
        default: "/github/workspace/Dockerfile"                          

    secrets:
      devguard-token:
        description: 'DevGuard API token'
        required: true
  
jobs: 
  call-secret-scanning:
    uses: ./.github/workflows/secret-scanning.yml

  call-sast:
    uses: ./.github/workflows/sast.yml

  call-software-compsition-analysis:
    uses: ./.github/workflows/software-composition-analysis.yml
    with:
      asset-name: ${{ inputs.asset-name }}
      api-url: ${{ inputs.api-url }}
      sca-path: ${{ inputs.sca-path }}
    secrets:
      devguard-token: ${{ secrets.DEVGUARD_TOKEN }}
   
  call-build-image:
    uses: ./.github/workflows/build-image.yml
    with:
      image-path: ${{ inputs.image-path }}
      image-tag: ${{ inputs.image-tag }}
      image-name: ${{ inputs.image-name }}
      context: ${{ inputs.context }}
      dockerfile: ${{ inputs.dockerfile }}

  call-container-scanning:
    needs: call-build-image
    uses: ./.github/workflows/container-scanning.yml
    with:
      asset-name: ${{ inputs.asset-name }}
      api-url: ${{ inputs.api-url }}
      image-path: ${{ inputs.image-path }}
    secrets:
      devguard-token: ${{ secrets.DEVGUARD_TOKEN }}    
  
  call-deploy:
    needs: call-build-image
    uses: ./.github/workflows/deploy.yml
 



